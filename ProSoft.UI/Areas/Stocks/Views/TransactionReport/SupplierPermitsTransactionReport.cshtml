@using FastReport.Web
@using ProSoft.EF.DTOs.Stocks.Report.Transactions
@using ProSoft.UI.Global

@model SupplierPermitsTransactionRequestDTO

@{
    ViewData["Title"] = "Supplier Permits Transaction Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var isRTL = CultureInfo.CurrentCulture.Name.StartsWith("ar");
    SelectList stocks = new SelectList(ViewBag.Stocks, "Stkcod", "Stknam");
    SelectList suppliers = new SelectList(ViewBag.Suppliers, "SupCode1", "SupName");
    WebReport? webReport = ViewBag.WebReport;
}

@inject IViewLocalizer localizer


<div class="container pt-2 ">

    <div class="d-flex justify-content-between align-items-center flex-column flex-md-row mt-1 mb-3">
        <h2 class="header" style="color: #084298;">@localizer["Supplier Permits Transaction Report"]</h2>

    </div>

    <form asp-action="SupplierPermitsTransactionReport" method="post" class="filter-box">
        <div class="row gx-2 gy-2 p-3">
            <input asp-for="@Model.BranchId" value="@ViewBag.BranchId" hidden />
            <div class="col-12 row">
                <div class="col-md-6 col-lg-3 ">
                    <label asp-for="StockId" class="form-label">@localizer["Stock"]</label>
                    <select id="StockSelect" asp-items="stocks" asp-for="@Model.StockId" class="form-control text-center">
                        <option value="">@localizer["Choosee"]</option>
                    </select>
                    <span asp-validation-for="StockId" class="text-danger"></span>

                </div>
                <div class="col-md-6 col-lg-3 ">
                    <label asp-for="@Model.TransType" class="form-label">@localizer["Permission Type"]</label>
                    <select id="permitsSelect" asp-for="@Model.TransType" class="form-control text-center">
                        <option value="">@localizer["Choosee"]</option>
                    </select>
                    <span asp-validation-for="@Model.TransType" class="text-danger"></span>

                </div>
                <div class="col-md-6 col-lg-3">
                    <label asp-for="FromDate" class="form-label">@localizer["From Period"]</label>
                    <input id="fromPeriod" type="date" asp-for="@Model.FromDate" value="@(new DateTime(DateTime.Now.Year,1,1).ToString(GlobalConstants.FormatDate))" class="form-control text-center " />
                    <span asp-validation-for="FromDate" class="text-danger"></span>

                </div>
                <div class="col-md-6 col-lg-3">
                    <label asp-for="ToDate" class="form-label">@localizer["To Period"]</label>
                    <input id="toPeriod" type="date" asp-for="@Model.ToDate" value="@(DateTime.Now.ToString(GlobalConstants.FormatDate))" class="form-control text-center " />
                    <span asp-validation-for="ToDate" class="text-danger"></span>

                </div>
            </div>

            <div>
                <div class="col-md-6 col-lg-3 ">
                    <label asp-for="@Model.SupplierId" class="form-label">@localizer["The Supplier"]</label>
                    <select asp-for="@Model.SupplierId" asp-items="suppliers" class="form-control text-center">
                        <option value="">@localizer["No Filter"]</option>
                    </select>
                    <span asp-validation-for="@Model.SupplierId" class="text-danger"></span>

                </div>
            </div>
            <div class="col-12 row">
                <div class="col-md-6 col-lg-3">
                    <label asp-for="@Model.SearchByItemCode" class="form-label">@localizer["Search By Item Code"]</label>
                    <input type="text" asp-for="@Model.SearchByItemCode" class="form-control text-center " />
                    <span asp-validation-for="@Model.SearchByItemCode" class="text-danger"></span>
                </div>
                <div class="col-md-6 col-lg-3">
                    <label asp-for="@Model.SearchByItemName" class="form-label">@localizer["Search By Item Name"]</label>
                    <input type="text" asp-for="@Model.SearchByItemName" class="form-control text-center " />
                    <span asp-validation-for="@Model.SearchByItemName" class="text-danger"></span>
                </div>
                <div class="col-md-6 col-lg-3">
                    <label asp-for="@Model.FromItemCode" class="form-label">@localizer["From Code"]</label>
                    <input type="text" asp-for="@Model.FromItemCode" class="form-control text-center " />
                    <span asp-validation-for="@Model.FromItemCode" class="text-danger"></span>
                </div>
                <div class="col-md-6 col-lg-3">
                    <label asp-for="@Model.ToItemCode" class="form-label">@localizer["To Code"]</label>
                    <input type="text" asp-for="@Model.ToItemCode" class="form-control text-center " />
                    <span asp-validation-for="@Model.ToItemCode" class="text-danger"></span>
                </div>
            </div>

            <button type="submit" id="btn-submit" class="btn btn-primary col-md-2 col-lg-2" style="width:auto">

                @localizer["View"]
                <span id="spinner" class="spinner-grow spinner-grow-sm d-none"></span>

            </button>
        </div>

        @* <hr style="margin: 6px;" /><!----------------------------------------------------------> *@

    </form>
    @if (webReport != null)
    {

        <div class="webreport text-center">
            @await webReport.Render()
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {

            // Initialize the dropdown manager
            DropdownManager.init({
                parentDropdownId: 'StockSelect',
                childDropdownId: 'permitsSelect',
                apiEndpoint: {
                    url: '/Stocks/TransactionReport/GetPermitsDependOnStock',
                    params: {
                        "UserCode": 1
                    },
                },
                defaultChildOption: '@localizer["Choosee"]',
                fields: {
                    id: 'uniqueType',
                    text: 'gDesc'
                }
            });


            const permitsSelect = document.getElementById('permitsSelect');

            permitsSelect.addEventListener("childLoaded", function (e) {
                console.log(e.detail);
                const permitsSelectValue = localStorage.getItem('permitsSelect');
                // condition for input is not disabled


                if (permitsSelectValue && !permitsSelect.disabled) {
                    permitsSelect.value = permitsSelectValue;
                }
            })

           
            // Save the selected value in the permitsSelect dropdown
            permitsSelect.addEventListener('change', function () {
                localStorage.setItem('permitsSelect', permitsSelect.value);
            });
        });
    </script>
}
