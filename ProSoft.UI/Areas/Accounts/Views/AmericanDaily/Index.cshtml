@model ReportAmericanDailyDTO
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "American Daily";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var isRTL = CultureInfo.CurrentCulture.Name.StartsWith("ar");

    SelectList branches = new SelectList(Model.branchs, "BranchId", "BranchDesc");
    SelectList JournalTypes = new SelectList(Model.JournalTypes, "JournalCode", "JournalName");
    SelectList mainAccCodes = new SelectList(Model.accMainCodes, "MainCode", "MainName");

}
@inject IViewLocalizer localizer
<style>
    .hide {
        display: none !important;
    }
    /*  .image {
                    top: 0px;
                    left: 0px;
                    width: 100%;
                    height: 100%;
                    background-repeat: no-repeat;
                    background-attachment: fixed;
                    background-size: cover;
                    background-position: center;
                    opacity: 0.5;
                    z-index: -1;
                } */
</style>
<div class="container pt-2 " style="min-height:100vh;">
    @* <img class="image" src="/background.jpg" style="position:absolute;" /> *@

    <div class="d-flex justify-content-between align-items-center flex-column flex-md-row mt-1">
        <h3 class="header" style="color: #084298;">@localizer["American Daily"]</h3>
        <div class="d-flex gap-2">
            <a class="btn btn-sm btn-primary fs-6" style="width:150px;background-color: #084298;color: yellow;border-radius: 8px" onclick="AmericanDaily(event)">
                @localizer["Display"]
            </a>
        </div>
    </div>

    <div class="overflow-auto filter-box">
        <div class=" d-flex justify-content-between align-items-center flex-column flex-md-row gap-3 px-1 my-2">
            <div class="d-flex align-items-center flex-column flex-md-row w-100">
                <label for="branches" style="color: #0000d7;" class="@(isRTL ? "ms-3" : "me-3") mb-1 mb-md-0">@localizer["Branches"]</label>
                <select id="branches" asp-items="branches" class="form-control text-center w-100 p-0">
                    <option value="100">@localizer["All Baranches"]</option>
                </select>
            </div>
            <div class="d-flex align-items-center flex-column flex-md-row w-100">
                <label for="journals" style="color: #0000d7;" class="@(isRTL ? "ms-3" : "me-3") mb-1 mb-md-0">@localizer["Journal"]</label>
                <select id="journals" asp-items="JournalTypes" class="form-control text-center w-100 p-0">
                    <option value="100">@localizer["All Journals"]</option>
                </select>
            </div>
            <div class="d-flex align-items-center w-100">
                <label style="width:60% !important;color: #0000d7;">@localizer["From Period"]</label>
                <input id="fromPeriod" type="date" class="form-control text-center p-0" />
            </div>
            <div class="d-flex align-items-center w-100">
                <label style="width:60% !important;color: #0000d7;">@localizer["To Period"]</label>
                <input id="toPeriod" type="date" class="form-control text-center p-0" />
            </div>
        </div>

        <hr style="margin: 6px;" /><!---------------------------------------------------------->

        <div class=" d-flex justify-content-between align-items-center flex-column flex-md-row gap-3 px-1 my-0">
            <div class="d-flex align-items-center w-100">
                <label asp-for="MainCode" style="width:60% !important;color: #0000d7;"></label>
                <select asp-for="MainCode" asp-items="mainAccCodes" class="form-control text-center p-0" onchange="getSubCodes(event)">
                    <option value="">-- Choose --</option>
                </select>
                <span asp-validation-for="MainCode" class="text-danger"></span>
            </div>
            <div class="d-flex align-items-center w-100">
                <label asp-for="SubCode" style="width:60% !important;color: #0000d7;"></label>
                <select asp-for="SubCode" class="form-control text-center p-0">
                    <option value="">-- Choose --</option>
                </select>
                <span asp-validation-for="SubCode" class="text-danger"></span>
            </div>
            <div class="d-flex align-items-center d-flex justify-content-end  w-50">
                <a class="btn btn-sm btn-primary fs-6" style="width:150px;background-color: #084298;color: yellow;border-radius: 8px" onclick="TotalJournal(event)">
                    @localizer["Total Journal"]
                </a>
            </div>
        </div>

        <!---------------------------------------------------------->
    </div>

    <div class="report">
    </div>
</div>
<script>
    ////for variables /////
    var branch = document.getElementById("branches");
    var journal = document.getElementById("journals");
    var fromPeriod = document.getElementById("fromPeriod");
    var toPeriod = document.getElementById("toPeriod");
    var mainCode = document.getElementById("MainCode");
    var subCode = document.getElementById("SubCode");

    //for report American Daily//
    function AmericanDaily(e) {
        if (!fromPeriod.value || !toPeriod.value) {
            if (!fromPeriod.value) {
                fromPeriod.focus();
            } else {
                toPeriod.focus();
            }
            return;
        }
        var journalName = journal.options[journal.selectedIndex].textContent;
        let title = `@localizer["American Daily"] @localizer["From"] ${fromPeriod.value} @localizer["To"] ${toPeriod.value} - ${journalName}`;

        var headReport = document.querySelector(".report");
        headReport.innerHTML = `
            <div class="report-head d-flex justify-content-center align-items-center mt-4">
                <h4 class="header">${title}</h4>
                <button onclick="printReport()" class="btn btn-success" style="margin-inline-start: auto;">Print</button>
            </div>
            <div class="print-table p-0 mb-2 overflow-auto">
                <style>
                    .fixed-width-date {
                        width: 150px;
                    }
                </style>
                <table id="myTable" class="table table-bordered border-dark table-hover Voucher-table" style="width:100%">
                      <thead class="table-primary border-dark">
                        <tr id="headersRow1">
                            <th class="align-middle text-center" rowspan="2">@localizer["Voucher No"]</th>
                            <th class="align-middle text-center fixed-width-date" rowspan="2">@localizer["Voucher Date"]</th> <!-- Fixed width for the date column -->
                            <th class="align-middle text-center" rowspan="2">@localizer["Note"]</th>
                            <!-- Dynamic main names headers -->
                        </tr>
                        <tr id="headersRow2">
                            <!-- Dynamic Debit and Credit headers -->
                        </tr>
                    </thead>
                    <tbody id="voucherTableBody">
                        <!-- Rows will be dynamically generated here -->
                    </tbody>
                </table>
            </div>
        `;
        let urlMainNames;
        if(mainCode.value === "" && subCode.value === "")
        {
             urlMainNames = `/Accounts/AmericanDaily/GetMainName/${branch.value}?journal=${journal.value}&fromPeriod=${fromPeriod.value}&toPeriod=${toPeriod.value}`;
        }
        else
        {
             urlMainNames = `/Accounts/AmericanDaily/GetSubName/${branch.value}?journal=${journal.value}&fromPeriod=${fromPeriod.value}&toPeriod=${toPeriod.value}&mainCode=${mainCode.value}&subCode=${subCode.value}`;
        }

        $.ajax({
            url: urlMainNames,
            success: function (mainNames) {
                mainNames.forEach(mainName => {
                    var th1 = document.createElement("th");
                    th1.className = "align-middle text-center";
                    th1.innerText = mainName;
                    th1.style.borderLeft = "4px solid gray";
                    th1.colSpan = 2;
                    headersRow1.appendChild(th1);

                    var thDebit = document.createElement("th");
                    thDebit.className = "align-middle text-center";
                    thDebit.innerText = "@localizer["Debit"]";
                    headersRow2.appendChild(thDebit);

                    var thCredit = document.createElement("th");
                    thCredit.className = "align-middle text-center";
                    thCredit.style.borderLeft = "4px solid gray";
                    thCredit.innerText = "@localizer["Credit"]";
                    headersRow2.appendChild(thCredit);
                });

                // Adding the total columns after all dynamic columns
                var thTotalDebit = document.createElement("th");
                thTotalDebit.className = "align-middle text-center";
                thTotalDebit.rowSpan = 2;
                thTotalDebit.innerText = "@localizer["The Sum Debit"]";
                headersRow1.appendChild(thTotalDebit);

                var thTotalCredit = document.createElement("th");
                thTotalCredit.className = "align-middle text-center";
                thTotalCredit.rowSpan = 2;
                thTotalCredit.innerText = "@localizer["The Sum Credit"]";
                headersRow1.appendChild(thTotalCredit);

                var thTotalCredit = document.createElement("th");
                thTotalCredit.className = "align-middle text-center";
                thTotalCredit.rowSpan = 2;
                thTotalCredit.innerText = "@localizer["The Difference"]";
                headersRow1.appendChild(thTotalCredit);

                let urlTransMain;
                if (mainCode.value === "" && subCode.value === "") 
                {
                   urlTransMain = `/Accounts/AmericanDaily/GetAmericanDaily/${branch.value}?journal=${journal.value}&fromPeriod=${fromPeriod.value}&toPeriod=${toPeriod.value}`;
                }
                else
                {
                    urlTransMain = `/Accounts/AmericanDaily/GetAmericanDailyForMainSub/${branch.value}?journal=${journal.value}&fromPeriod=${fromPeriod.value}&toPeriod=${toPeriod.value}&mainCode=${mainCode.value}&subCode=${subCode.value}`;
                }
               // console.log(urlTransMain);
                $.ajax({
                    url: urlTransMain,
                    success: function (result) {
                        //console.log(result);
                        var voucherTableBody = document.getElementById("voucherTableBody");
                        voucherTableBody.innerHTML = "";  // Clear existing data

                        var valDepSums = {};
                        var valCreditSums = {};
                        var totalDebit = 0;
                        var totalCredit = 0;

                        mainNames.forEach(mainName => {
                            valDepSums[mainName] = 0;
                            valCreditSums[mainName] = 0;
                        });

                        result.forEach(item => {
                            let transDate = item.transDate ? new Date(item.transDate).toISOString().split('T')[0] : "";
                            let transNo = item.transNo || "";

                            const row = document.createElement("tr");
                            row.innerHTML = `
                                <td class="align-middle text-center">${transNo}</td>
                                <td class="align-middle fixed-width-date">${transDate}</td> <!-- Fixed width for the date column -->
                                <td class="align-middle">${item.lineDesc}</td>
                            `;

                            let rowDebitSum = 0;
                            let rowCreditSum = 0;

                            mainNames.forEach(mainName => {
                                var mainCodeValue = item.mainCodeValues.find(mc => mc.item1 === mainName);
                                var debit = mainCodeValue && mainCodeValue.item2 !== null ? mainCodeValue.item2 : 0; // Assuming 'item2' is Debit
                                var credit = mainCodeValue && mainCodeValue.item3 !== null ? mainCodeValue.item3 : 0; // Assuming 'item3' is Credit

                                row.innerHTML += `
                                    <td class="align-middle">${debit}</td>
                                    <td class="align-middle" style="border-left: 4px solid grey;">${credit}</td>
                                `;

                                rowDebitSum += parseFloat(debit);
                                rowCreditSum += parseFloat(credit);
                                valDepSums[mainName] += parseFloat(debit);
                                valCreditSums[mainName] += parseFloat(credit);
                            });

                            row.innerHTML += `
                                <td class="align-middle" style="background-color: #e6dfdf;">${rowDebitSum}</td>
                                <td class="align-middle" style="background-color: #e6dfdf;">${rowCreditSum}</td>
                                <td class="align-middle" style="background-color: #e6dfdf;">${rowDebitSum - rowCreditSum}</td>
                            `;

                            totalDebit += rowDebitSum;
                            totalCredit += rowCreditSum;

                            voucherTableBody.appendChild(row);
                        });

                        const sumRow = document.createElement("tr");
                        sumRow.innerHTML = `
                            <td colspan="3" class="text-center">@localizer["The Total"]</td>
                        `;

                        mainNames.forEach(mainName => {
                            sumRow.innerHTML += `
                                <td style="background-color: #e6dfdf;">${valDepSums[mainName]}</td>
                                <td style="background-color: #e6dfdf;border-left: 4px solid grey;">${valCreditSums[mainName]}</td>
                            `;
                        });

                        sumRow.innerHTML += `
                            <td style="background-color: #e6dfdf;">${totalDebit}</td>
                            <td style="background-color: #e6dfdf;">${totalCredit}</td>
                            <td style="background-color: #e6dfdf;">${totalDebit - totalCredit}</td>
                        `;

                        voucherTableBody.appendChild(sumRow);
                    },
                    error: function (xhr, status, error) {
                        console.error(error); // Log any errors
                    }
                });
            },
            error: function (xhr, status, error) {
                console.error(error); // Log any errors
            }
        });
    }
    
    //American Total Journal
    //for report From Voucher To Voucher//
    function TotalJournal(e) {
        if (!fromPeriod.value || !toPeriod.value) {
            if (!fromPeriod.value) {
                fromPeriod.focus();
            } else {
                toPeriod.focus();
            }
            return;
        }
        var journalName = journal.options[journal.selectedIndex].textContent;
        let title = `@localizer["American Daily Transaction"] @localizer["From"] ${fromPeriod.value} @localizer["To"] ${toPeriod.value} - ${journalName}`;

        var headReport = document.querySelector(".report");

        headReport.innerHTML =
            `
                        <div class="report-head d-flex justify-content-center align-items-center mt-4">
                             <h4 class="header">${title}</h4>
                                 <button onclick="printReport()" class="btn btn-success" style="margin-inline-start: auto;">Print</button>
                        </div>

                        <div class="print-table p-0 mb-2 overflow-auto">

                                <table id="myTable" class="table table-bordered  border-dark table-hover Voucher-table" style="width:100%">
                                 <thead class="table-primary  border-dark">
                                    <tr>
                                        <th class="align-middle text-center" rowspan="2">
    @localizer["Code"]
                                        </th>
                                        <th class="align-middle text-center" rowspan="2">
    @localizer["Main Account Code"]
                                        </th>
                                        <th class="align-middle text-center" rowspan="2">
    @localizer["Account Name"]
                                        </th>
                                        <th class="align-middle text-center" rowspan="2">
    @localizer["Debit Value"]
                                        </th>
                                        <th class="align-middle text-center" rowspan="2">
    @localizer["Credit Value"]
                                        </th>

                                    </tr>

                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>

                    `;

        let url = `/Accounts/AmericanDaily/GetAmericanTotalJournal/${journal.value}?branch=${branch.value}&fromPeriod=${fromPeriod.value}&toPeriod=${toPeriod.value}`;

        var dataa = document.querySelector(".Voucher-table tbody");
        dataa.innerHTML = "";  // Empty data
        $.ajax({
            url: url,
            success: function (result) {
                var index = 1;
                var valDepSum = 0;
                var valCreditSum = 0;

                for (let item of result) {
                    const data = document.createElement("tr");
                    data.innerHTML +=
                        `
                                <td class="align-middle">${index}</td>
                                <td class="align-middle">${item.mainCode}</td>
                                <td class="align-middle">${item.mainName}</td>
                                <td class="align-middle">${item.valDep}</td>
                                <td class="align-middle">${item.valCredit}</td>
                            `;
                    dataa.appendChild(data);
                    index++;
                    valDepSum += item.valDep;
                    valCreditSum += item.valCredit;
                }

                // Add final totals row
                const finalTotalsRow = document.createElement("tr");
                finalTotalsRow.innerHTML =
                    `
                                <td colspan="3" class="text-center"><strong>@localizer["The Total"]</strong></td>
                                <td class="align-middle" style="background-color: #e6dfdf;">${valDepSum.toFixed(2)}</td>
                                <td class="align-middle" style="background-color: #e6dfdf;">${valCreditSum.toFixed(2)}</td>
                            `;
                dataa.appendChild(finalTotalsRow);
            }
        });
    }

    function printReport() {
        let head = document.querySelector(".report-head");
        let tableReport = document.querySelector(".print-table");
        let originalContent = document.body.innerHTML;//all body

        head.querySelector("button").style.display = "none";
        document.body.style.padding = "30px 30px";
        document.body.innerHTML = head.outerHTML + tableReport.outerHTML;
        window.print();
        document.body.innerHTML = originalContent;
    }
    function getSubCodes(e) {
        let mainElement = e.target;
        let subElement = document.getElementById("SubCode");

        subElement.innerHTML = `<option value="">-- Choose --</option>`;

        $.ajax({
            url: `/Treasury/AccSafeCash/GetSubCodesFromAcc/${mainElement.value}`,
            success: function (result) {
                // console.log(result);
                for (let item of result) {
                    subElement.innerHTML +=
                        `<option value="${item.subCode}">${item.subName}</option>`;
                }
            }
        });
    }
</script>