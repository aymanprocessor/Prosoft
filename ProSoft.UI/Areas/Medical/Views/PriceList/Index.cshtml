@using ProSoft.UI.Global
@model List<PriceListViewDTO>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Price List";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //SelectList drList = new SelectList(ViewBag.doctors, "DrId", "DrDesc");

}
@inject IViewLocalizer localizer
<div class="container pt-2" style=" min-height:100vh;">

    <div class="d-flex justify-content-between align-items-center flex-column flex-md-row mt-4 gap-2">
        <h1 class="header">@localizer["Price Lists"]</h1>
        <div >
            <input type="text" id="searchInput" class="form-control" oninput="searchListName()" placeholder="@localizer["Search by List Name..."]">
        </div>
        
         <div class="d-flex justify-content-center">
            <div class="me-md-4 ms-4">
                <label class="form-check-label">
                    <input class="form-check-input radio-inline" type="radio" name="filter" value="@localizer["Private"]" onchange="SelectOption(event)">
                    @localizer["Private"]
                </label>
            </div>
            <div class="me-md-4">
                <label class="form-check-label">
                    <input class="form-check-input radio-inline" type="radio" name="filter" value="@localizer["Contract"]" onchange="SelectOption(event)">
                    @localizer["Contract"]
                </label>
            </div>
        </div>
         
        <a asp-controller="PriceList" asp-action="Add_PriceList" class="btn btn-sm btn-primary fs-6 mb-1" style="width:160px">
            @localizer["Add List"]
        </a>
    </div>
    <div class="overflow-auto" style="height: 280px;">
        <table id="myTable" class="table table-bordered table-hover" style="width:100%;">
            <thead class="table-dark">
                <tr>
                    <th class="align-middle">
                        @localizer["Code"]
                    </th>
                    <th class="align-middle">
                        @localizer["List Name"]
                    </th>
                    <th class="align-middle">
                        @localizer["List Type"]
                    </th>
                    <th class="align-middle">
                        @localizer["Date of List"]
                    </th>
                    <th class="align-middle">
                        @localizer["Financial Year"]
                    </th>
                    <th class="align-middle">
                        @localizer["Action"]
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var pl in Model)
                {
                    <tr onclick="GetTermOfPriceLists(event,@pl.PLId)" style="cursor:pointer;">
                        <td>
                            @pl.PLId
                        </td>
                        <td class="item-name">
                            @pl.PlDesc
                        </td>
                        <td>
                            @if (pl.Flag1 == 1)
                                @localizer["Private"]
                            else if (pl.Flag1 == 2)
                                @localizer["Contract"]
                        </td>
                        <td>
                            @pl.PLDate
                        </td>
                        <td>
                            @pl.Year
                        </td>

                        <td  class="text-center">
                            <a asp-controller="PriceList" asp-action="Edit_PriceList" asp-route-ID="@pl.PLId" class="btn btn-sm btn-warning mb-1 fs-6" >
                                @Html.Raw(GlobalConstants.EditIcon)
                            </a>

                            <form asp-action="Delete_PriceList" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@pl.PLId" />
                                <button type="submit" class="btn btn-sm btn-danger mb-1  fs-6" onclick="return confirm('Are you sure you want to delete this item ?');">@Html.Raw(GlobalConstants.EditIcon)</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    @* /////////////////////////////////////////////////////////////////// *@

    @* Table for PriceListDTL *@

    <div class="PriceListDtl-table-head d-flex justify-content-between align-items-center flex-column flex-md-row gap-1 mt-4">
        <h2 class="header PriceList-Dtl">@localizer["Terms of Price Lists"] :</h2>

        <div class="d-flex justify-content-center align-items-center gap-1">
            <input type="text" id="searchInputLevel1" class="form-control" oninput="searchLevels()" placeholder="@localizer["Search Level 1..."]">
            <input type="text" id="searchInputLevel2" class="form-control" oninput="searchLevels()" placeholder="@localizer["Search Level 2..."]">
            <input type="text" id="searchInputLevel3" class="form-control" oninput="searchLevels()" placeholder="@localizer["Search Level 3..."]">
        </div>

        <a class="btn btn-sm btn-primary fs-6 mb-1" style="width:150px">
            @localizer["Add Term"]
        </a>
        @* asp-controller="MedAnalysis" asp-action="Add_SubItemAnalysis" asp-route-ID="@ViewBag.item.MainCode" asp-route-itemAnalCode="" *@
    </div>

    <div class="border border-success p-0 mb-2 border-opacity-75 overflow-auto" style="max-height: 500px;">

        
        <table id="table"
               data-toggle="table"
               data-url="json/data1.json">
            <thead>
                <tr>
                    <th data-field="id">ID</th>
                    <th data-field="name">Item Name</th>
                    <th data-field="price">Item Price</th>
                </tr>
            </thead>
        </table>
    </div>

    @* /////////////////////////////////////////////////////////////////// *@

</div>

<script>
    @* Ajax for DocDTL *@
        function GetTermOfPriceLists(e, id) {

            var termOfPriceLists = document.querySelector(".priceListDtl-table tbody");
            // Handle active clic
            let allItemRows = e.target.parentElement.parentElement.querySelectorAll("tr");;
            allItemRows.forEach(row => {
                row.classList.remove("active-row");
            });

            let clickedTarget = e.target.parentElement
            clickedTarget.classList.add("active-row");
            ///////////////////////////////////////////////////////////////////

            // Catch header for Doctor sub dtl => doctor id and reset it
            let priceListDtlHead = document.querySelector(".PriceListDtl-table-head");

            let itemName = clickedTarget.querySelector(".item-name").innerText;
            //console.log(itemName)

            let priceListDtlHeader = priceListDtlHead.querySelector(".header.PriceList-Dtl"); // Display Header for doctor sub dtls
            priceListDtlHeader.innerHTML = "@localizer["Terms of Price Lists"] :" + itemName;

            let priceListDtlAddButton = priceListDtlHead.querySelector("a");
            priceListDtlAddButton.setAttribute("href", `/Medical/TermsPriceList/Add_TermOfPriceList/${id}`);
            // console.log(priceListDtlAddButton);
            ///////////////////////////////////////////////////////////////////

            // Handle ajax call
            termOfPriceLists.innerHTML = "";  // Empty the body

            $.ajax({
                url: `/Medical/TermsPriceList/GetTermOfPriceLists/${id}`,
                success: function (result) {
                     console.log(result);
                    // console.log(result.sort((a, b) => b.itemanalcode - a.itemanalcode));
                    //sortng
                    result.sort((a, b) => a.plDetailCode - b.plDetailCode);
                    //console.log(result);


                    for (let item of result) {
                        const priceListDtl = document.createElement("tr");
                        priceListDtl.innerHTML +=

                            `
                                    <td class="align-middle">${item.plDetailCode}</td>
                                    <td class="align-middle">${item.clinicDesc}</td>
                                    <td class="align-middle">${item.sClinicDesc}</td>
                                    <td class="align-middle">${item.servId}</td>
                                    <td class="align-middle">${item.servDesc}</td>
                                    <td class="align-middle">{item.servBefDesc}</td>
                                    <td class="align-middle">${item.discoutComp}</td>
                                    <td class="align-middle">${item.plValue}</td>
                                    <td class="align-middle">${item.compCovPercentage}</td>
                                    <td class="align-middle">${item.compValue}</td>
                                    <td class="align-middle">${item.plValue2}</td>
                                    <td class="align-middle">${item.plValue3}</td>
                                    <td class="align-middle">${item.extraVal}</td>
                                    <td class="align-middle">${item.extraVal2}</td>
                                    <td class="align-middle">${item.covered}</td>
                                    
                                    <td width="30%" class="text-center">
                                            <a href="/Medical/TermsPriceList/Edit_TermOfPriceList/${item.plDtlId}"  class="btn btn-sm btn-success mb-1  fs-6" style="width:150px">
                                            <i class="bi bi-pencil"></i> @localizer["Edit"]
                                        </a>
                                       <form action="/Medical/TermsPriceList/Delete_TermOfPriceList" method="post" class="d-inline">
    @Html.AntiForgeryToken()
                                      <input type="hidden" name="id" value="${item.plDtlId}" />
                                        <button type="submit" class="btn btn-sm btn-danger mb-1  fs-6" onclick="return confirm('Are you sure you want to delete this item ?');" style="width:150px">@localizer["Delete"]</button>
                                        </form>
                                    </td>
                                            `;
                        termOfPriceLists.appendChild(priceListDtl);
                    }
                }
            });
        }

   

    @* script for fillteing and Searching *@

    @* for filter *@
        function SelectOption(event) {
            var selectedOption = event.target.value; // Get the selected option value

            // Get all table rows
            var tableRows = document.querySelectorAll("#myTable tbody tr");

            // Loop through each row
            tableRows.forEach(function (row) {
                // Get the value of the "List Type" column in the current row
                var listType = row.cells[2].textContent.trim();

                // Show or hide the row based on the selected option value
                if (selectedOption === "All" || listType === selectedOption) {
                    row.style.display = ""; // Show the row
                } else {
                    row.style.display = "none"; // Hide the row
                }
            });
        }

    @* for Search in price List *@
        function searchListName() {
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById("searchInput");
            filter = input.value.toUpperCase();
            table = document.getElementById("myTable");
            tr = table.getElementsByTagName("tr");

            // Loop through all table rows, hide those that do not match the search query
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByClassName("item-name")[0];
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }

    @* for Search by levels *@

    function searchLevels() {
            var input, filter, table, tr, td1, td2, td, i, txtValue1, txtValue2, txtValue;
        filter1 = document.getElementById("searchInputLevel1").value.toUpperCase();
        filter2 = document.getElementById("searchInputLevel2").value.toUpperCase();
        filter = document.getElementById("searchInputLevel3").value.toUpperCase();
        table = document.getElementById("myTableDtl");
        tr = table.getElementsByTagName("tr");

        for (i = 0; i < tr.length; i++) {
                td1 = tr[i].getElementsByTagName("td")[1]; // Index 1 corresponds to Level 1 column
                td2 = tr[i].getElementsByTagName("td")[2]; // Index 2 corresponds to Level 2 column
              td = tr[i].getElementsByTagName("td")[4]; // Index 3 corresponds to Level 3 column
            if (td) {
                txtValue1 = td1.textContent || td1.innerText;
                txtValue2 = td2.textContent || td2.innerText;
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1 && txtValue2.toUpperCase().indexOf(filter2) > -1 && txtValue1.toUpperCase().indexOf(filter1) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>
